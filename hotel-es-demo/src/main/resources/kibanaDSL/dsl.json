PUT book/_settings
{
  "number_of_replicas": 2
}

POST /_analyze
{
  "text": "你好啊我的宝贝",
  "analyzer": "ik_smart"
}

# 创建索引库
PUT /heima
{
"mappings": {
"properties": {
"info":{
"type": "text",
"analyzer": "ik_smart"
},
"email":{
"type": "keyword",
"index": false
},
"name":{
"type": "object",
"properties": {
"firstname": {
"type":"keyword"
},
"lastname":{
"type":"keyword"
}
}
}
}
}
}

#查看索引库
GET /heima

#修改，添加新字段
PUT /heima/_mapping
{
"properties":{
"age":{
"type":"integer"
}
}
}

#删除
DELETE /heima

#插入一条文档
POST /heima/_doc/1
{
"info":"黑马程序员java讲师",
"email":"zy@itcast.cc",
"name":{
"firstname":"云",
"lastname":"赵"
}
}

#查询文档
GET /heima/_doc/1

#删除文档
DELETE /heima/_doc/1

#全量修改文档
PUT /heima/_doc/2
{
"info":"黑马程序员java讲师",
"email":"zhaoyun@itcast.cc",
"name":{
"firstname":"云",
"lastname":"赵"
}
}

#局部修改文档
POST /heima/_update/1
{
"doc":{
"email":"zyun@itcast.com"
}
}

#酒店的mapping
PUT /hotel
{
"mappings": {
"properties": {
"id":{
"type": "keyword"
},
"all":{
"type": "text",
"analyzer": "ik_max_word"
},
"name":{
"type": "text",
"analyzer": "ik_max_word",
"copy_to": "all"
},
"address":{
"type": "keyword",
"index": false
},
"price":{
"type": "integer"
},
"score":{
"type": "integer"
},
"brand":{
"type": "keyword",
"copy_to": "all"
},
"city":{
"type": "keyword"
},
"starName":{
"type": "keyword"
},
"business":{
"type": "keyword",
"copy_to": "all"
},
"location":{
"type": "geo_point"
},
"pic":{
"type": "keyword",
"index": false
}
}
}
}

#查找索引库
GET /hotel

#删除索引库
DELETE /hotel

GET /hotel/_doc/61083

#查询所有
GET /hotel/_search
{
"query": {
"match_all": {}
}
}

#match查询
GET /hotel/_search
{
"query": {
"match": {
"all": "外滩如家"
}
}
}

#multi_match查询
GET /hotel/_search
{
"query": {
"multi_match": {
"query": "外滩如家",
"fields": ["brand","name","business"]
}
}
}

#term拆线呢
GET /hotel/_search
{
"query": {
"term": {
"city": {
"value": "北京"
}
}
}
}

#range查询
GET /hotel/_search
{
"query": {
"range": {
"price": {
"gte": 650,
"lte": 700
}
}
}
}


#distance距离查询
GET /hotel/_search
{
"query": {
"geo_distance":{
"distance":"2km",
"location":"31.21,121.5"
}
}
}

#function score查询
GET /hotel/_search
{
"query": {
"function_score": {
"query": {
"match": {
"all": "外滩"
}
},
"functions": [
{
"filter": {
"term": {
"brand": "如家"
}
},
"weight": 10
}
],
"boost_mode": "sum"
}
}
}

#boole query复合查询
GET /hotel/_search
{
"query": {
"bool": {
"must": [
{"match": {
"name": "如家"
}}
],
"must_not": [
{
"range": {
"price": {
"gt": 400
}
}
}
],
"filter": [
{
"geo_distance": {
"distance": "10km",
"location": {
"lat": 31.21,
"lon": 121.5
}
}
}
]
}
}
}

#排序
GET /hotel/_search
{
"query": {
"match_all": {

}
},
"sort": [
{
"score":  "desc"
},
{
"price": "asc"
}
]
}

# 找到距离酒店升序
GET /hotel/_search
{
"query": {
"match_all": {

}
},
"sort": [
{
"_geo_distance": {
"location": {
"lat": 31.0346,
"lon": 121.6122
},
"order": "asc",
"unit": "km"
}
}
]
}

#分页
GET /hotel/_search
{
"query": {
"match_all": {}
},
"sort": [
{
"price": {
"order": "asc"
}
}
],
"from": 20,
"size": 20
}

#高亮,默认搜索字段与高亮字段一致才能显示
GET /hotel/_search
{
"query": {
"match": {
"all": "如家"
}
},
"highlight": {
"fields": {
"name": {
"require_field_match": "false"
}
}
}
}

#聚合功能
GET /hotel/_search
{
"size": 0,
"aggs": {
"brandAgg": {
"terms": {
"field": "brand",
"size": 20
}
}
}
}


#聚合功能,自定义排序
GET /hotel/_search
{
"size": 0,
"aggs": {
"brandAgg": {
"terms": {
"field": "brand",
"size": 20,
"order": {
"_count": "asc"
}
}
}
}
}

#限定聚合范围
GET /hotel/_search
{
"query": {
"range": {
"price": {
"lte": 200
}
}
},
"size": 0,
"aggs": {
"brandAgg": {
"terms": {
"field": "brand",
"size": 20
}
}
}
}

#嵌套聚合metric
GET /hotel/_search
{
"size": 0,
"aggs": {
"brandAgg": {
"terms": {
"field": "brand",
"size": 20,
"order": {
"scoreAgg.avg": "desc"
}
},
"aggs": {
"scoreAgg": {
"stats": {
"field": "score"
}
}
}
}
}
}

POST /test/_analyze
{
"text": ["如家酒店还不错"],
"analyzer": "my_analyzer"
}

#自定义分词器
PUT /test
{
"settings": {
"analysis": {
"analyzer": {
"my_analyzer": {
"tokenizer": "ik_max_word",
"filter": "py"
}
},
"filter": {
"py": {
"type": "pinyin",
"keep_full_pinyin": false,
"keep_joined_full_pinyin": true,
"keep_original": true,
"limit_first_letter_length": 16,
"remove_duplicated_term": true,
"none_chinese_pinyin_tokenize": false
}
}
}
},
"mappings": {
"properties": {
"name":{
"type": "text",
"analyzer": "my_analyzer",
"search_analyzer": "ik_smart"
}
}
}
}

DELETE /test

POST /test/_doc/1
{
"id": 1,
"name": "狮子"
}
POST /test/_doc/2
{
"id": 2,
"name": "虱子"
}

GET /test/_search
{
"query": {
"match": {
"name": "掉入狮子笼咋办"
}
}
}

# 自动补全的索引库
PUT test2
{
"mappings": {
"properties": {
"title":{
"type": "completion"
}
}
}
}
# 示例数据
POST test2/_doc
{
"title": ["Sony", "WH-1000XM3"]
}
POST test2/_doc
{
"title": ["SK-II", "PITERA"]
}
POST test2/_doc
{
"title": ["Nintendo", "switch"]
}

# 自动补全查询
GET /test2/_search
{
"suggest": {
"title_suggest": {
"text": "s",
"completion": {
"field": "title",
"skip_duplicates": true,
"size": 10
}
}
}
}













